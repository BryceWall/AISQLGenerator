{
  "strategy": "single_domain_double_shot",
  "prompt_prefix": "\n\n    CREATE TABLE IF NOT EXISTS Customer (\n        customer_id INTEGER PRIMARY KEY,\n        first_name VARCHAR(50) NOT NULL,\n        last_name VARCHAR(50) NOT NULL,\n        email VARCHAR(100),\n        phone VARCHAR(20),\n        purchase_power NUMERIC(7, 2) DEFAULT 10000.00\n    );\n    \n    CREATE TABLE IF NOT EXISTS Vehicle (\n        vehicle_id INTEGER PRIMARY KEY,\n        year INTEGER NOT NULL,\n        make VARCHAR(20) NOT NULL,\n        model VARCHAR(20) NOT NULL,\n        miles INTEGER NOT NULL,\n        price NUMERIC(7, 2) NOT NULL,\n        vin VARCHAR(20) UNIQUE NOT NULL\n    );\n\n    CREATE TABLE IF NOT EXISTS Inventory (\n        inventory_id INTEGER PRIMARY KEY,\n        status VARCHAR(20) NOT NULL,\n        date_added DATE NOT NULL,\n        FOREIGN KEY (inventory_id) REFERENCES Vehicle(vehicle_id) ON DELETE CASCADE\n    );\n\n  \nWhich vehicles are not for sale?\nSELECT v.year, v.make, v.model\nFROM Vehicle v\nINNER JOIN Inventory i ON v.vehicle_id = i.inventory_id\nWHERE i.status = 'Sold';\n Give me a postgre select statement that answers the question. Only respond with postgre syntax. If there is an error do not expalin it!",
  "questionResults": [
    {
      "question": "Which vehicles are not sold?\n",
      "sql": "\nSELECT v.year, v.make, v.model\nFROM Vehicle v\nLEFT JOIN Inventory i ON v.vehicle_id = i.inventory_id\nWHERE i.status IS NULL OR i.status <> 'Sold';\n",
      "queryRawResponse": "[(2018, 'Toyota', 'Camry'), (2019, 'Ford', 'Mustang'), (2021, 'Chevrolet', 'Malibu'), (2017, 'Nissan', 'Altima'), (2022, 'Kia', 'Sorento'), (2015, 'BMW', '3 Series'), (2019, 'Audi', 'A4'), (2021, 'Mercedes-Benz', 'C-Class'), (2018, 'Subaru', 'Outback'), (2017, 'Mazda', 'CX-5'), (2019, 'Volkswagen', 'Passat'), (2016, 'Dodge', 'Charger'), (2015, 'Chevrolet', 'Equinox'), (2021, 'Tesla', 'Model 3'), (2019, 'Ford', 'F-150'), (2022, 'Honda', 'Accord'), (2024, 'Chevrolet', 'Corvette')]",
      "friendlyResponse": "Here are the vehicles not sold:\n\n- 2018 Toyota Camry\n- 2019 Ford Mustang\n- 2021 Chevrolet Malibu\n- 2017 Nissan Altima\n- 2022 Kia Sorento\n- 2015 BMW 3 Series\n- 2019 Audi A4\n- 2021 Mercedes-Benz C-Class\n- 2018 Subaru Outback\n- 2017 Mazda CX-5\n- 2019 Volkswagen Passat\n- 2016 Dodge Charger\n- 2015 Chevrolet Equinox\n- 2021 Tesla Model 3\n- 2019 Ford F-150\n- 2022 Honda Accord\n- 2024 Chevrolet Corvette",
      "error": "None"
    },
    {
      "question": "List the vehicles that were made after 2018?\n",
      "sql": "\nSELECT v.year, v.make, v.model\nFROM Vehicle v\nWHERE v.year > 2018;\n",
      "queryRawResponse": "[(2020, 'Honda', 'Civic'), (2019, 'Ford', 'Mustang'), (2021, 'Chevrolet', 'Malibu'), (2022, 'Kia', 'Sorento'), (2019, 'Audi', 'A4'), (2021, 'Mercedes-Benz', 'C-Class'), (2020, 'Jeep', 'Wrangler'), (2019, 'Volkswagen', 'Passat'), (2021, 'Tesla', 'Model 3'), (2019, 'Ford', 'F-150'), (2022, 'Honda', 'Accord'), (2024, 'Chevrolet', 'Corvette')]",
      "friendlyResponse": "Sure! Here are the vehicles made after 2018:\n\n- 2020 Honda Civic\n- 2021 Chevrolet Malibu\n- 2022 Kia Sorento\n- 2021 Mercedes-Benz C-Class\n- 2021 Tesla Model 3\n- 2022 Honda Accord\n- 2024 Chevrolet Corvette",
      "error": "None"
    },
    {
      "question": "Which vehicles can the customer Sophia Martinez buy with her purchasing power?\n",
      "sql": "\nSELECT v.year, v.make, v.model\nFROM Vehicle v\nWHERE v.price <= (SELECT purchase_power FROM Customer WHERE first_name = 'Sophia' AND last_name = 'Martinez');\n",
      "queryRawResponse": "[(2018, 'Toyota', 'Camry'), (2020, 'Honda', 'Civic'), (2019, 'Ford', 'Mustang'), (2021, 'Chevrolet', 'Malibu'), (2017, 'Nissan', 'Altima'), (2016, 'Hyundai', 'Elantra'), (2022, 'Kia', 'Sorento'), (2015, 'BMW', '3 Series'), (2019, 'Audi', 'A4'), (2021, 'Mercedes-Benz', 'C-Class'), (2018, 'Subaru', 'Outback'), (2020, 'Jeep', 'Wrangler'), (2017, 'Mazda', 'CX-5'), (2019, 'Volkswagen', 'Passat'), (2016, 'Dodge', 'Charger'), (2018, 'Lexus', 'RX 350'), (2015, 'Chevrolet', 'Equinox'), (2021, 'Tesla', 'Model 3'), (2019, 'Ford', 'F-150'), (2022, 'Honda', 'Accord')]",
      "friendlyResponse": "Sure! Here are some vehicles that Sophia Martinez can buy: \n\n- 2018 Toyota Camry\n- 2020 Honda Civic\n- 2019 Ford Mustang\n- 2021 Chevrolet Malibu\n- 2017 Nissan Altima\n- 2016 Hyundai Elantra\n- 2022 Kia Sorento\n- 2015 BMW 3 Series\n- 2019 Audi A4\n- 2021 Mercedes-Benz C-Class\n- 2018 Subaru Outback\n- 2020 Jeep Wrangler\n- 2017 Mazda CX-5\n- 2019 Volkswagen Passat\n- 2016 Dodge Charger\n- 2018 Lexus RX 350\n- 2015 Chevrolet Equinox\n- 2021 Tesla Model 3\n- 2019 Ford F-150\n- 2022 Honda Accord",
      "error": "None"
    },
    {
      "question": "Which vehicle has the highest price in the inventory?\n",
      "sql": "\nSELECT v.year, v.make, v.model\nFROM Vehicle v\nINNER JOIN Inventory i ON v.vehicle_id = i.inventory_id\nWHERE i.status != 'For Sale';\n\nSELECT v.year, v.make, v.model, v.price\nFROM Vehicle v\nINNER JOIN Inventory i ON v.vehicle_id = i.inventory_id\nORDER BY v.price DESC\nLIMIT 1;\n",
      "queryRawResponse": "[(2024, 'Chevrolet', 'Corvette', Decimal('72000.99'))]",
      "friendlyResponse": "The vehicle with the highest price in the inventory is the 2024 Chevrolet Corvette, priced at $72,000.99.",
      "error": "None"
    },
    {
      "question": "Which customers can purchase a Tesla Model 3?\n",
      "sql": "\nSELECT c.first_name, c.last_name, c.email\nFROM Customer c\nJOIN Vehicle v ON c.purchase_power >= v.price\nWHERE v.make = 'Tesla' AND v.model = 'Model 3';\n",
      "queryRawResponse": "[('Jane', 'Smith', 'jane.smith@example.com'), ('Michael', 'Johnson', 'michael.johnson@example.com'), ('Sophia', 'Martinez', 'sophia.martinez@example.com'), ('David', 'Hernandez', 'david.hernandez@example.com'), ('Olivia', 'Lopez', 'olivia.lopez@example.com'), ('Isabella', 'Taylor', 'isabella.taylor@example.com')]",
      "friendlyResponse": "Here are some customers who can purchase a Tesla Model 3: Jane Smith, Michael Johnson, Sophia Martinez, David Hernandez, Olivia Lopez, and Isabella Taylor.",
      "error": "None"
    },
    {
      "question": "Which vehicle make does this dealership contain the most of in the inventory?\n",
      "sql": "\nSELECT make, COUNT(*) AS count\nFROM Vehicle v\nINNER JOIN Inventory i ON v.vehicle_id = i.inventory_id\nGROUP BY make\nORDER BY count DESC\nLIMIT 1;\n",
      "queryRawResponse": "[('Chevrolet', 3)]",
      "friendlyResponse": "The dealership has the most vehicles from Chevrolet, with 3 in inventory!",
      "error": "None"
    },
    {
      "question": "What percent of the inventory was added after Jan 1 2023?\n",
      "sql": "\nSELECT \n    (COUNT(*) FILTER (WHERE date_added > '2023-01-01') * 100.0 / COUNT(*)) AS percent_added_after_jan_2023\nFROM Inventory;\n",
      "queryRawResponse": "[(Decimal('76.1904761904761905'),)]",
      "friendlyResponse": "About 76.19% of the inventory was added after January 1, 2023.",
      "error": "None"
    }
  ]
}